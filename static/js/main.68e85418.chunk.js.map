{"version":3,"sources":["blockTwo/TwoBlock.js","blockThree/ThreeBlock.js","blockOne/OneBlock.js","serviceWorker.js","index.js"],"names":["TwoBlock","prop","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","todoNum","handleKeyPress","e","key","handleCreate","handleEnter","state","input","alert","tobeSaved","toConsumableArray","todos","setState","savedTodos","concat","handleChange","target","value","deleteToDo","i","copyToDos","splice","clearToDo","undo","disappear","undoDesc","props","todoinfo","_this2","eachTodo","map","todo","index","react_default","a","createElement","className","onClick","compo","style","height","placeholder","onChange","onKeyPress","toDoDone","React","Component","ThreeBlock","bottom","set","selected","openBlockTwo","selectedToDo","isToDo","length","delete","forEach","each","date","isSame","confirmDiv","openSchedule","src_blockTwo_TwoBlock","twoblockheight","allToDos","todowithdiv","changedToDo","assign","push","moment","currentYear","month","currentMonth","format","currentDayNum","sort","id","source","document","getElementById","clientWidth","targetted","lastElementChild","setAttribute","getElementsByTagName","width","confirmation","yesorno","console","log","todoall","todosinmonth","todoList","_loop","_i","currentMonthtodos","todosinEachMonth","year","onMouseEnter","elementID","currentTarget","onMouseLeave","mouseLeave","stopPropagation","daysinmonth","getRows","year_month_todos","ref","divThree","done","cookies","Cookies","OneBlock","weekdayshort","weekdaysShort","heightThree","styleTop","btn","dateObject","setYear","yearDiv","setCurrentYear","selectedYear","changedData","yearList","years","add","dateArray","currentDate","stopDate","setMonth","monthDiv","setCurrentMonth","selectedMonth","months","indexOf","monthList","currentDay","toUpperCase","firstDayOfMonth","startOf","daysInMonth","setToDo","dayNum","content","checkToDo","toDoOpen","nthObject","daysWithToDo","dateStrings","b","handleLeave","quickDelete","tobeDeleted","openToDoList","todoDiv","doneManageAll","finalTodo","undefined","get","optionDiv","newHeight","newHeightThree","tdlist","clientTop","divElement","clientHeight","divele","days","componentNum","blankdays","arguments","totalSlots","itemNum","rows","cells","row","d","path","expires","Date","now","weekdayshortname","day","blankDays","withToDo","todoInfo","objNum","found","obj","toLocaleUpperCase","src_blockThree_ThreeBlock","top","Boolean","window","location","hostname","match","elements","src_blockOne_OneBlock","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68e85418.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TwoBlock.css';\r\n// import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\nconst todo_key = \"todo_\";\r\n\r\nclass TwoBlock extends React.Component {\r\n    constructor(prop) {\r\n        super(prop);\r\n        this.state = {\r\n            input: \"\",\r\n            todos: this.props.todoinfo === [] ? [] : this.props.todoinfo,\r\n            savedTodos: [],\r\n            undoDesc: \"OK\"\r\n        }\r\n    }\r\n\r\n    todoNum = 1;\r\n\r\n    handleKeyPress = e => {\r\n        if (e.key === \"Enter\") {\r\n            this.handleCreate();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        this.handleCreate();\r\n    }\r\n\r\n    handleCreate = () => {\r\n        if (this.state.input === \"\") {\r\n            alert(\"Cannot be empty\");\r\n        } else {\r\n            let tobeSaved = [...this.state.todos];\r\n            this.setState({\r\n                savedTodos: tobeSaved,\r\n                input: \"\",\r\n                todos: this.state.todos.concat(this.state.input)\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            input: e.target.value\r\n        });\r\n    };\r\n\r\n    deleteToDo = (i) => {\r\n        let copyToDos = [...this.state.todos];\r\n        let tobeSaved = [...this.state.todos];\r\n        copyToDos.splice(i, 1);\r\n\r\n        this.setState({\r\n            savedTodos: tobeSaved,\r\n            todos: copyToDos\r\n        })\r\n    }\r\n\r\n    clearToDo = () => {\r\n        let tobeSaved = [...this.state.todos];\r\n        this.setState({\r\n            savedTodos: tobeSaved,\r\n            todos: []\r\n        })\r\n    }\r\n\r\n    undo = () => {\r\n        this.setState({\r\n            todos: this.state.savedTodos\r\n        })\r\n    }\r\n\r\n    disappear = () => {\r\n        this.setState({\r\n            undoDesc: \"Closing\"\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        let eachTodo = \"\"\r\n        if (this.state.todos !== []) {\r\n            // console.log(this.state.todos);\r\n            eachTodo = this.state.todos.map((todo, index) => {\r\n                return <div key={todo_key + this.todoNum++} className=\"each-todo\">\r\n                    <span className=\"delete\" onClick={e => { this.deleteToDo(index) }\r\n                    }>X</span>\r\n                    {todo}\r\n                </div>\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.compo === 1 ? \"schedule-container zero-top\" : \"schedule-container zero-bottom\"}>\r\n                {/* <ReactCSSTransitionGroup transitionName=\"undoDesc\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={1000}\r\n                    transitionEnter={true}\r\n                    transitionEnterTimeout={1000}\r\n                    transitionLeave={true}\r\n                    transitionLeaveTimeout={1000}\r\n                >\r\n                    <div key={\"undo-btn-info\" + this.state.undoDesc} id=\"undo-btn-info\" className=\"bg-info\">\r\n                        After adding, deleting, or clearing, Undo button can't be used consequtively (one at a time).\r\n                        After above three actions, Undo button works only once to restore the preceding data<br key={\"br\" + this.state.undoDesc} />\r\n                        <button key={\"undo-btn-ok\" + this.state.undoDesc} id=\"undo-btn-ok\" className=\"btn-danger\"\r\n                            onClick={e => this.disappear()}>{this.state.undoDesc}</button>\r\n                    </div>\r\n                </ReactCSSTransitionGroup> */}\r\n                <div className=\"container-title\">\r\n                    To-Do List\r\n                </div>\r\n                <div className=\"todos\" style={{ height: this.props.height }}>\r\n                    <div className=\"input-group\">\r\n                        <input className=\"todoform\" placeholder=\"Enter your task\" value={this.state.input}\r\n                            onChange={e => this.handleChange(e)} onKeyPress={e => this.handleKeyPress(e)} />\r\n                        <div className=\"add btn-danger\" onClick={e => this.handleEnter()}>ENTER</div>\r\n                    </div>\r\n                    <hr className=\"text-primary\" />\r\n                    {eachTodo}\r\n                </div>\r\n                <div className=\"btn-container\">\r\n                    <div className=\"done bg-primary\" onClick={e => this.props.toDoDone(this.state.todos)}>Done</div>\r\n                    <div className=\"clear\" onClick={e => this.clearToDo()}>Clear</div>\r\n                    <div className=\"undo\" onClick={e => this.undo()}>Undo</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TwoBlock;","import React from 'react';\r\nimport './ThreeBlock.css';\r\nimport moment from 'moment';\r\nimport TwoBlock from '../blockTwo/TwoBlock';\r\n\r\nclass ThreeBlock extends React.Component {\r\n    constructor(prop) {\r\n        super(prop);\r\n        this.state = {\r\n            todo: this.props.todoall,\r\n            selectedToDo: [],\r\n            openBlockTwo: false,\r\n            isToDo: false,\r\n            index: -1,\r\n            confirmDiv: false\r\n        }\r\n    }\r\n\r\n    bottom = 0;\r\n\r\n    set = (index, selected) => {\r\n        // this.bottom = document.getElementById(\"existing_\"+ selected.date);\r\n\r\n        this.setState({\r\n            openBlockTwo: true,\r\n            selectedToDo: selected.todos,\r\n            index: index,\r\n            isToDo: selected.todos.length === 0 ? false : true //boolean to check if there are todos in a selected day\r\n        })\r\n    }\r\n    delete = selected => {\r\n        this.state.todo.forEach((each, i) => {\r\n            if (each.date.isSame(selected.date)) {\r\n                this.setState({\r\n                    confirmDiv: true,\r\n                    index: i\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    openSchedule = () => {\r\n        if (this.state.openBlockTwo) {\r\n            return <TwoBlock todoinfo={this.state.selectedToDo} height={this.props.twoblockheight} toDoDone={this.toDoDone} compo={3} />\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    toDoDone = (allToDos) => {\r\n        let todowithdiv = allToDos.map(todo => {\r\n            return todo\r\n        });\r\n\r\n        let changedToDo = Object.assign([], this.state.todo);\r\n\r\n        if (allToDos.length === 0) {\r\n            changedToDo.splice(this.state.index - 1, 1);\r\n\r\n            this.setState({\r\n                openBlockTwo: false,\r\n                todo: changedToDo\r\n            })\r\n        } else if (this.state.isToDo) {\r\n            changedToDo[this.state.index - 1].todos = todowithdiv;\r\n\r\n            this.setState({\r\n                openBlockTwo: false,\r\n                todo: changedToDo\r\n            })\r\n        } else {\r\n            let changedToDo = Object.assign([], this.state.todo);\r\n            changedToDo.push({\r\n                date: new moment(this.currentYear() + \"-\" + moment().month(this.currentMonth()).format(\"MM\") + \"-\" + this.state.currentDayNum),\r\n                todos: todowithdiv\r\n            });\r\n\r\n            //sorting\r\n            changedToDo = this.props.sort(changedToDo);\r\n\r\n            this.setState({\r\n                openBlockTwo: false,\r\n                todo: changedToDo\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEnter = id => {\r\n        let source = document.getElementById(id).clientWidth;\r\n        let targetted = document.getElementById(id).lastElementChild;\r\n        targetted.setAttribute(\"style\", \"display: flex;\");\r\n        for (let i = 0; i < targetted.getElementsByTagName('div').length; i++) {\r\n\r\n            targetted.getElementsByTagName('div')[i].style.width = source / 2 + \"px\";\r\n        }\r\n    }\r\n\r\n    confirmation = yesorno => {\r\n\r\n        if (yesorno) {\r\n            let changedToDo = Object.assign([], this.state.todo)\r\n            changedToDo.splice(this.state.index, 1);\r\n            console.log(changedToDo);\r\n\r\n            this.setState({\r\n                confirmDiv: false,\r\n                todo: changedToDo\r\n            })\r\n        } else {\r\n            this.setState({\r\n                confirmDiv: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let todosinmonth = [];\r\n        let todoList = this.state.todo;\r\n\r\n        for (let i = 0; i < todoList.length; i++) {\r\n            let currentMonthtodos = [];\r\n            let todosinEachMonth = [];\r\n            let month = todoList[i].date.format(\"MM\");\r\n            let year = todoList[i].date.format(\"YYYY\");\r\n            let index = i;\r\n            while (index < todoList.length && todoList[index].date.format(\"MM\") === month && todoList[index].date.format(\"YYYY\") === year) {\r\n                todosinEachMonth.push(todoList[index]);\r\n                index++;\r\n            }\r\n            todosinEachMonth.forEach(todo => {\r\n                currentMonthtodos.push(<td key={\"existing_\" + todo.date} id={\"existing_\" + todo.date} className=\"item\"\r\n                    onMouseEnter={e => {\r\n                        let elementID = e.currentTarget.id;\r\n                        this.handleEnter(elementID);\r\n                    }\r\n                    } onMouseLeave={e => {\r\n                        let elementID = e.currentTarget.id;\r\n                        this.props.mouseLeave(elementID)\r\n                    }\r\n                    }>\r\n                    <p>{todo.date.format(\"D\")}</p>\r\n                    <div className=\"option-container for-three\">\r\n                        <div className=\"delete-todo\" onClick={e => {\r\n                            e.stopPropagation();\r\n                            this.delete(todo)\r\n                        }\r\n                        }>Delete</div>\r\n                        <div className=\"view-todo bg-primary\" onClick={e => {\r\n                            e.stopPropagation();\r\n                            this.set(index, todo)\r\n                        }\r\n                        }>View</div>\r\n                    </div>\r\n                </td>);\r\n            })\r\n            let daysinmonth = this.props.getRows(currentMonthtodos, 3);\r\n\r\n            let year_month_todos = <div key={i} className={this.state.confirmDiv ? \"list-todos-container cal-blur for-three-cal-blur\" : \"list-todos-container\"}>\r\n                <div className=\"list-item-title\">{todoList[index - 1].date.format(\"YYYY MMMM\")}</div>\r\n                <table className=\"calendar-todos\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"four-rows\"></th>\r\n                            <th className=\"four-rows\"></th>\r\n                            <th className=\"four-rows\"></th>\r\n                            <th className=\"four-rows\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {daysinmonth}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            todosinmonth.push(year_month_todos);\r\n\r\n            i = index < todoList.length ? index - 1 : todoList.length;\r\n        }\r\n\r\n        return (\r\n            <div className=\"three-container\" ref={(divThree) => this.divThree = divThree}>\r\n                {this.openSchedule()}\r\n                {this.state.confirmDiv &&\r\n                    <div className=\"confirm-container for-three-confirm\">\r\n                        Are you sure you delete this?\r\n                            <div className=\"yesorno-container\">\r\n                            <button className=\"yes btn-success\" onClick={e => this.confirmation(true)}>Yes</button>\r\n                            <button className=\"no btn-danger\" onClick={e => this.confirmation(false)}>No</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div style={{ height: this.props.height }} className={this.state.confirmDiv ? \"list-of-todos confirm-active\" : \"list-of-todos\"}>\r\n                    <div className=\"list-name\">List of All To-Dos in the Calendar</div>\r\n                    <br />\r\n                    {todosinmonth}\r\n                </div>\r\n                <div className=\"doneManage bg-primary\" onClick={e => this.props.done(this.state.todo)}>Done</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThreeBlock;\r\n\r\n","import React from 'react';\r\nimport './OneBlock.css';\r\nimport moment from 'moment';\r\nimport TwoBlock from '../blockTwo/TwoBlock';\r\nimport ThreeBlock from '../blockThree/ThreeBlock';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n// const [count, setCount] = useState(0); react hooks\r\n// cookies.remove(\"todos\");\r\n\r\nclass OneBlock extends React.Component {\r\n    constructor(prop) {\r\n        super(prop);\r\n        this.state = {\r\n            dateObject: moment(),\r\n            monthDiv: false, // boolean for toggling down month selection div\r\n            yearDiv: false, // boolean for toggling down year selection div\r\n            toDoOpen: false, // boolean for opening todo div\r\n            currentMonth: \"\",\r\n            currentDayNum: \"\",\r\n            daysWithToDo: cookies.get(\"todos\") === undefined ? [] : cookies.get(\"todos\"), // save all todo objects\r\n            todos: [],// props for a list of todos\r\n            index: \"\", //index of object in daysWithToDo\r\n            isToDo: false, // check if there are todos in a selected day\r\n            optionDiv: false,\r\n            todoDiv: false,\r\n            confirmDiv: false,\r\n            newHeight: 0,\r\n            newHeightThree: 0\r\n\r\n        }\r\n\r\n\r\n        if (cookies.get(\"todos\") !== undefined) {\r\n            this.state.daysWithToDo.forEach(todo => {\r\n                todo.date = new moment(todo.date);\r\n            })\r\n        }\r\n    }\r\n\r\n    weekdayshort = moment.weekdaysShort();\r\n    year = moment().format(\"YYYY\");\r\n    heightThree = 0;\r\n    styleTop = 0;\r\n    height = 0;\r\n    btn = 0;\r\n\r\n    componentDidMount() {\r\n        this.styleTop = this.tdlist.clientTop;\r\n        this.height = this.divElement.clientHeight - this.divele.clientHeight * 2.5;\r\n        this.heightThree = this.divElement.clientHeight - this.divele.clientHeight;\r\n    }\r\n\r\n    currentYear = () => {\r\n        return this.state.dateObject.format(\"YYYY\");\r\n    }\r\n\r\n    setYear = () => {\r\n        this.setState({\r\n            yearDiv: !this.state.yearDiv\r\n        })\r\n    }\r\n\r\n    setCurrentYear = (selectedYear) => {\r\n        let changedData = Object.assign({}, this.state.dateObject);\r\n        changedData = moment(changedData).set(\"year\", selectedYear);\r\n\r\n        this.setState({\r\n            dateObject: changedData,\r\n            yearDiv: false\r\n        })\r\n    }\r\n\r\n    yearList = () => {\r\n        let years = moment().add(11, \"year\").format(\"Y\");\r\n        var dateArray = [];\r\n        var currentDate = moment(this.year);\r\n        var stopDate = moment(years);\r\n        while (currentDate <= stopDate) {\r\n            dateArray.push(moment(currentDate).format(\"YYYY\"));\r\n            currentDate = moment(currentDate).add(1, \"year\");\r\n        }\r\n\r\n        let yearList = dateArray.map(year => {\r\n            return (\r\n                <div key={year} className={this.currentYear() === year ? \"year current\" : \"year\"} onClick={e => this.setCurrentYear(year)} >\r\n                    {year}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return yearList;\r\n    }\r\n\r\n    setMonth = () => {\r\n        this.setState({\r\n            monthDiv: !this.state.monthDiv\r\n        })\r\n    }\r\n\r\n    setCurrentMonth = (selectedMonth) => {\r\n        let index = moment.months().indexOf(selectedMonth);\r\n        let changedData = Object.assign({}, this.state.dateObject);\r\n        changedData = moment(changedData).set(\"month\", index);\r\n\r\n        this.setState({\r\n            dateObject: changedData,\r\n            monthDiv: false\r\n        })\r\n    }\r\n\r\n    currentMonth = () => {\r\n        return this.state.dateObject.format(\"MMMM\");\r\n    }\r\n\r\n    monthList = () => {\r\n        let monthList = moment.months().map(month => {\r\n            return (\r\n                <div key={month} className={this.currentMonth() === month ? \"month current\" : \"month\"} onClick={e => this.setCurrentMonth(month)} >\r\n                    {month}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return monthList;\r\n    }\r\n\r\n    currentDay = () => {\r\n        return this.state.dateObject.format(\"D\").toUpperCase;\r\n    };\r\n\r\n    firstDayOfMonth = () => {\r\n        let dateObject = this.state.dateObject;\r\n        let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\r\n        return firstDay;\r\n    };\r\n\r\n    daysInMonth = () => {\r\n        return this.state.dateObject.daysInMonth();\r\n    }\r\n\r\n    setToDo = (dayNum, content, checkToDo) => {\r\n        this.setState({\r\n            toDoOpen: true,\r\n            currentDayNum: dayNum,\r\n            todos: content.todoList,\r\n            index: content.nthObject,\r\n            isToDo: checkToDo //boolean to check if there are todos in a selected day\r\n        })\r\n    }\r\n\r\n    openSchedule = () => {\r\n        if (this.state.toDoOpen) {\r\n            return <TwoBlock todoinfo={this.state.todos} height={this.height} toDoDone={this.toDoDone} compo={1} />\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    toDoDone = (allToDos) => {\r\n        let todowithdiv = allToDos.map(todo => {\r\n            return todo\r\n        });\r\n\r\n        let changedToDo = Object.assign([], this.state.daysWithToDo);\r\n\r\n        if (this.state.isToDo) {\r\n            if (allToDos.length === 0) {\r\n                changedToDo.splice(this.state.index, 1);\r\n\r\n                this.setState({\r\n                    toDoOpen: false,\r\n                    daysWithToDo: changedToDo\r\n                })\r\n            } else {\r\n                changedToDo[this.state.index].todos = todowithdiv;\r\n\r\n                this.setState({\r\n                    toDoOpen: false,\r\n                    daysWithToDo: changedToDo\r\n                })\r\n            }\r\n        } else {\r\n            if (allToDos.length !== 0) {\r\n                let changedToDo = Object.assign([], this.state.daysWithToDo);\r\n                changedToDo.push({\r\n                    date: new moment(this.currentYear() + \"-\" + moment().month(this.currentMonth()).format(\"MM\") + \"-\" + this.state.currentDayNum),\r\n                    todos: todowithdiv\r\n                });\r\n\r\n                //sorting\r\n                changedToDo = this.sort(changedToDo);\r\n\r\n                this.setState({\r\n                    toDoOpen: false,\r\n                    daysWithToDo: changedToDo\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    toDoOpen: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    sort = (dateStrings) => {\r\n        const array = dateStrings;\r\n        const sortedArray = array.sort((a, b) => new moment(a.date).format('YYYYMMDD') - new moment(b.date).format('YYYYMMDD'))\r\n        return sortedArray\r\n    }\r\n\r\n    handleEnter = id => {\r\n        let targetted = document.getElementById(id).lastElementChild;\r\n        targetted.setAttribute(\"style\", \"display: flex;\");\r\n    }\r\n\r\n    handleLeave = id => {\r\n        let targetted = document.getElementById(id).lastElementChild;\r\n        targetted.setAttribute(\"style\", \"display: none;\");\r\n    }\r\n\r\n    quickDelete = tobeDeleted => {\r\n\r\n        this.setState({\r\n            confirmDiv: true,\r\n            index: tobeDeleted.nthObject\r\n        })\r\n    }\r\n\r\n    openToDoList = () => {\r\n        this.setState({\r\n            todoDiv: true\r\n        })\r\n    }\r\n\r\n    getRows(days, componentNum, blankdays = []) {\r\n        var totalSlots = blankdays !== [] ? [...blankdays, ...days] : [...days];\r\n        let itemNum = componentNum === 3 ? 4 : 7;\r\n\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if (i === 0) {\r\n                cells.push(row);\r\n            } else if (i % itemNum !== 0) {\r\n                cells.push(row); // if index not equal 7 that means not go to next week\r\n            } else {\r\n                rows.push(cells); // when reach next week we contain all td in last week to rows \r\n                cells = []; // empty container \r\n                cells.push(row); // in current loop we still push current row to new container\r\n            }\r\n            if (i === totalSlots.length - 1) { // when end loop we add remain date\r\n                rows.push(cells);\r\n            }\r\n        });\r\n\r\n        let daysinmonth = rows.map((d, i) => {\r\n            return <tr key={\"days_\" + i} className=\"days\">{d}</tr>;\r\n        });\r\n\r\n        return daysinmonth;\r\n    }\r\n\r\n\r\n\r\n    doneManageAll = (finalTodo) => {\r\n        this.setState({\r\n            daysWithToDo: finalTodo,\r\n            todoDiv: false\r\n        })\r\n    }\r\n\r\n    confirmation = yesorno => {\r\n\r\n        if (yesorno) {\r\n            let changedToDo = Object.assign([], this.state.daysWithToDo)\r\n            changedToDo.splice(this.state.index, 1);\r\n\r\n            this.setState({\r\n                confirmDiv: false,\r\n                daysWithToDo: changedToDo\r\n            })\r\n        } else {\r\n            this.setState({\r\n                confirmDiv: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        cookies.set(\"todos\", this.state.daysWithToDo, { path: '/', expires: new Date(Date.now() + 2592000) });\r\n        let weekdayshortname = this.weekdayshort.map(day => {\r\n            return (\r\n                <th key={day} className=\"week-day bg-primary\">\r\n                    {day}\r\n                </th>\r\n            );\r\n        });\r\n\r\n        let blankDays = [];\r\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blankDays.push(\r\n                <td key={\"empty_\" + i} className=\"calendar-day empty\">{\"\"}</td>\r\n            );\r\n        }\r\n\r\n        let daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let withToDo = \"\"\r\n            //let todoInfo = this.setToDoBgColor(d);\r\n            let todoInfo = {};\r\n            let todoList = [];\r\n            let objNum;\r\n            let found = false;\r\n\r\n            if (this.state.daysWithToDo.length !== 0) {\r\n                this.state.daysWithToDo.forEach((obj, index) => {\r\n                    let selected = new moment(this.currentYear() + \"-\" + moment().month(this.currentMonth()).format(\"MM\") + \"-\" + d);\r\n                    if (obj.date.isSame(selected)) {\r\n                        found = true;\r\n                        objNum = index;\r\n                        todoList = obj.todos.map(todo => {\r\n                            return todo\r\n                        });\r\n                        todoInfo = {\r\n                            todoList: todoList,\r\n                            nthObject: objNum\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        todoInfo = {\r\n                            todoList: todoList,\r\n                            nthObject: -1\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                todoInfo = {\r\n                    todoList: todoList,\r\n                    nthObject: -1\r\n                }\r\n            }\r\n\r\n            if (todoList.length !== 0) {\r\n                withToDo = <td key={d} id={d} className={\"calendar-day has-todo\"}\r\n                    onMouseEnter={e => {\r\n                        let elementID = e.currentTarget.id;\r\n                        this.handleEnter(elementID);\r\n                    }\r\n                    } onMouseLeave={e => {\r\n                        let elementID = e.currentTarget.id;\r\n                        this.handleLeave(elementID)\r\n                    }\r\n                    }>\r\n                    <p>{d}</p>\r\n                    <div className=\"option-container\">\r\n                        <div className=\"delete-todo\" onClick={e => {\r\n                            e.stopPropagation();\r\n                            this.quickDelete(todoInfo)\r\n                        }\r\n                        }>Delete</div>\r\n                        <div className=\"view-todo bg-primary\" onClick={e => {\r\n                            e.stopPropagation();\r\n                            this.setToDo(d, todoInfo, true)\r\n                        }\r\n                        }>View</div>\r\n                    </div>\r\n                </td>\r\n            } else {\r\n                withToDo = <td key={d} className={\"calendar-day\"} onClick={e => this.setToDo(d, todoInfo, false)} ><p>{d}</p></td>\r\n            }\r\n            daysInMonth.push(withToDo);\r\n        }\r\n\r\n        let daysinmonth = this.getRows(daysInMonth, 1, blankDays);\r\n\r\n        return (\r\n            <div ref={(divElement) => this.divElement = divElement}>\r\n                {this.openSchedule()}\r\n                <div className={this.state.confirmDiv || this.state.todoDiv || this.state.monthDiv ? \"calendar-year cal-blur bg-primary\" : \"calendar-year bg-primary\"} onClick={e => this.setYear()}>\r\n                    <p>{this.currentYear()}</p>\r\n                </div>\r\n\r\n                {this.state.yearDiv && <div className=\"year-selection\">{this.yearList()}</div>}\r\n\r\n                <div ref={(divele) => this.divele = divele}\r\n                    className={this.state.confirmDiv || this.state.todoDiv ? \"calendar-month cal-blur\" : \"calendar-month\"} onClick={e => this.setMonth()}>\r\n                    <p>{this.currentMonth().toLocaleUpperCase()}</p>\r\n                </div>\r\n\r\n                {this.state.monthDiv && <div className=\"month-selection\">{this.monthList()}</div>}\r\n                {this.state.confirmDiv &&\r\n                    <div className=\"confirm-container\">\r\n                        Are you sure you delete this?\r\n                                <div className=\"yesorno-container\">\r\n                            <button className=\"yes btn-success\" onClick={e => this.confirmation(true)}>Yes</button>\r\n                            <button className=\"no btn-danger\" onClick={e => this.confirmation(false)}>No</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <table className={this.state.toDoOpen || this.state.confirmDiv || this.state.monthDiv || this.state.yearDiv || this.state.todoDiv ? \"calendar cal-blur\" : \"calendar\"}>\r\n                    <thead>\r\n                        <tr className=\"weekday cal-container\">\r\n                            {weekdayshortname}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {daysinmonth}\r\n                    </tbody>\r\n                </table>\r\n                <div className={this.state.toDoOpen || this.state.confirmDiv || this.state.todoDiv || this.state.monthDiv || this.state.yearDiv ? \"all-todos cal-blur\" : \"all-todos\"}\r\n                    ref={(tdlist) => this.tdlist = tdlist} onClick={e => this.openToDoList()}>Check All To-Dos</div>\r\n                {this.state.todoDiv &&\r\n                    <ThreeBlock\r\n                        getRows={this.getRows} sort={this.sort} top={this.styleTop} height={this.heightThree}\r\n                        todoall={this.state.daysWithToDo} date={this.state.dateObject} twoblockheight={this.height}\r\n                        mouseLeave={this.handleLeave} done={this.doneManageAll} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OneBlock;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport OneBlock from './blockOne/OneBlock';\r\nimport TwoBlock from './blockTwo/TwoBlock';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst elements = [<OneBlock key=\"calendar\" />];\r\n\r\nReactDOM.render(elements, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}